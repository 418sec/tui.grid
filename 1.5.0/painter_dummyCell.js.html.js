tui.util.defineNamespace("fedoc.content", {});
fedoc.content["painter_dummyCell.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Dummy cell painter\n * @author NHN Ent. FE Development Team\n */\n'use strict';\n\nvar _ = require('underscore');\n\nvar Painter = require('../base/painter');\nvar util = require('../common/util');\nvar attrNameConst = require('../common/constMap').attrName;\nvar classNameConst = require('../common/classNameConst');\n\n/**\n * Dummy Cell Painter\n * @module painter/dummyCell\n * @extends module:base/painter\n */\nvar DummyCell = tui.util.defineClass(Painter, /**@lends module:painter/dummyCell.prototype */{\n    /**\n     * @constructs\n     */\n    init: function() {\n        Painter.apply(this, arguments);\n    },\n\n    /**\n     * css selector to find its own element(s) from a parent element.\n     * @type {String}\n     */\n    selector: 'td[' + attrNameConst.EDIT_TYPE + '=\"dummy\"]',\n\n    /**\n     * Template function\n     * @returns {String} HTML string\n     */\n    template: _.template(\n        '&lt;td ' +\n            attrNameConst.COLUMN_NAME + '=\"&lt;%=columnName%>\" ' +\n            attrNameConst.EDIT_TYPE + '=\"dummy\" ' +\n            'class=\"&lt;%=className%>\">' +\n            '&amp;#8203;' + // 'for height issue with empty cell in IE7\n        '&lt;/td>'\n    ),\n\n    /**\n     * Generates a HTML string from given data, and returns it.\n     * @param {Number} rowNum - row number\n     * @param {String} columnName - column name\n     * @returns {string} HTML string\n     * @implements {module:base/painter}\n     */\n    generateHtml: function(rowNum, columnName) {\n        var classNames = [\n            classNameConst.CELL,\n            classNameConst.CELL_DUMMY,\n            (rowNum % 2) ? classNameConst.CELL_ROW_ODD : classNameConst.CELL_ROW_EVEN\n        ];\n\n        if (util.isMetaColumn(columnName)) {\n            classNames.push(classNameConst.CELL_HEAD);\n        }\n\n        return this.template({\n            columnName: columnName,\n            className: classNames.join(' ')\n        });\n    }\n});\n\nmodule.exports = DummyCell;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"