tui.util.defineNamespace("fedoc.content", {});
fedoc.content["view_layout_frame-rside.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Right Side Frame\n * @author NHN Ent. FE Development Team\n */\n'use strict';\n\nvar Frame = require('./frame');\nvar classNameConst = require('../../common/classNameConst');\nvar CELL_BORDER_WIDTH = require('../../common/constMap').dimension.CELL_BORDER_WIDTH;\n\n\n/**\n * right side frame class\n * @module view/layout/frame-rside\n * @extends module:view/layout/frame\n */\nvar RsideFrame = Frame.extend(/**@lends module:view/layout/frame-rside.prototype */{\n    /**\n     * @constructs\n     */\n    initialize: function() {\n        Frame.prototype.initialize.apply(this, arguments);\n        this.setOwnProperties({\n            whichSide: 'R',\n            $scrollBorder: null\n        });\n        this.listenTo(this.dimensionModel, 'change:bodyHeight change:headerHeight',\n            this._resetScrollBorderHeight);\n    },\n\n    className: classNameConst.RSIDE_AREA,\n\n    /**\n     * Event handler for 'columnWidthChanged' event on dimensionModel\n     * @private\n     * @override\n     */\n    _onColumnWidthChanged: function() {\n        this._refreshLayout();\n    },\n\n    /**\n     * Refresh layout\n     * @private\n     */\n    _refreshLayout: function() {\n        var dimensionModel = this.dimensionModel,\n            width = dimensionModel.get('rsideWidth'),\n            marginLeft = dimensionModel.get('lsideWidth');\n\n        // If the left side exists and the division border should not be doubled,\n        // left side should cover the right side by border-width to hide the left border of the right side.\n        if (marginLeft > 0 &amp;&amp; !dimensionModel.isDivisionBorderDoubled()) {\n            width += CELL_BORDER_WIDTH;\n            marginLeft -= CELL_BORDER_WIDTH;\n        }\n\n        this.$el.css({\n            width: width,\n            marginLeft: marginLeft\n        });\n    },\n\n    /**\n     * Resets the height of a vertical scroll-bar border\n     * @private\n     */\n    _resetScrollBorderHeight: function() {\n        var dimensionModel, height;\n\n        if (this.$scrollBorder) {\n            dimensionModel = this.dimensionModel;\n            height = dimensionModel.get('bodyHeight') - dimensionModel.getScrollXHeight();\n            this.$scrollBorder.height(height);\n        }\n    },\n\n    /**\n     * To be called at the beginning of the 'render' method.\n     * @override\n     */\n    beforeRender: function() {\n        this.$el.css('display', 'block');\n        this._refreshLayout();\n    },\n\n    /**\n     * To be called at the end of the 'render' method.\n     * @override\n     */\n    afterRender: function() {\n        var dimensionModel = this.dimensionModel,\n            $space, $scrollBorder, $scrollCorner,\n            headerHeight;\n\n        if (!dimensionModel.get('scrollY')) {\n            return;\n        }\n        headerHeight = dimensionModel.get('headerHeight');\n\n        // Empty DIV for hiding scrollbar in the header area\n        $space = $('&lt;div />').addClass(classNameConst.SCROLLBAR_HEAD);\n\n        // Empty DIV for showing a left-border of vertical scrollbar in the body area\n        $scrollBorder = $('&lt;div />').addClass(classNameConst.SCROLLBAR_BORDER);\n\n\n        $space.height(headerHeight - 2); // subtract 2px for border-width (top and bottom)\n        $scrollBorder.css('top', headerHeight + 'px');\n\n        this.$el.append($space, $scrollBorder);\n\n        // Empty DIV for filling gray color in the right-bottom corner of the scrollbar.\n        // (For resolving the issue that styling scrollbar-corner with '-webkit-scrollbar-corner'\n        //  casues to be stuck in the same position in Chrome)\n        if (dimensionModel.get('scrollX')) {\n            $scrollCorner = $('&lt;div>').addClass(classNameConst.SCROLLBAR_RIGHT_BOTTOM);\n            this.$el.append($scrollCorner);\n        }\n\n        this.$scrollBorder = $scrollBorder;\n        this._resetScrollBorderHeight();\n    }\n});\n\nmodule.exports = RsideFrame;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"