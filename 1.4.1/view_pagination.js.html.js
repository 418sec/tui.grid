tui.util.defineNamespace("fedoc.content", {});
fedoc.content["view_pagination.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Class for the pagination in the toolbar\n * @author NHN Ent. FE Development Team\n */\n'use strict';\n\nvar _ = require('underscore');\n\nvar View = require('../base/view');\nvar classNameConst = require('../common/classNameConst');\n\nvar HTML_BTNS =\n    '&lt;a href=\"#\" class=\"' + classNameConst.PAGINATION_PRE_END + '\" title=\"First page\">First&lt;/a>' +\n    '&lt;a href=\"#\" class=\"' + classNameConst.PAGINATION_PRE + '\" title=\"Previous page\">Prev&lt;/a> ' +\n    '&lt;a href=\"#\" class=\"' + classNameConst.PAGINATION_NEXT + '\" title=\"Next page\">Next&lt;/a>' +\n    '&lt;a href=\"#\" class=\"' + classNameConst.PAGINATION_NEXT_END + '\" title=\"Last page\">Last&lt;/a>' +\n    '&lt;span class=\"' + classNameConst.PAGINATION_PRE_END_OFF + '\">First Off&lt;/span>' +\n    '&lt;span class=\"' + classNameConst.PAGINATION_PRE_OFF + '\">Prev Off&lt;/span>' +\n    '&lt;span class=\"' + classNameConst.PAGINATION_NEXT_OFF + '\">Next Off&lt;/span>' +\n    '&lt;span class=\"' + classNameConst.PAGINATION_NEXT_END_OFF + '\">Last Off&lt;/span>';\n\nvar defaultOptions = {\n    classPrefix: classNameConst.PREFIX,\n    itemCount: 1,\n    pagePerPageList: 5,\n    isCenterAlign: true,\n    moveUnit: 'page'\n};\n\n/**\n * Class for the pagination in the toolbar\n * @module view/pagination\n * @extends module:base/view\n */\nvar Pagination = View.extend(/**@lends module:view/pagination.prototype */{\n    /**\n     * @constructs\n     * @param {Object} options - Options\n     */\n    initialize: function(options) {\n        this.dimensionModel = options.dimensionModel;\n        this.componentHolder = options.componentHolder;\n        this.on('appended', this._onAppended);\n    },\n\n    className: classNameConst.PAGINATION,\n\n    /**\n     * Render\n     * @returns {Object} this object\n     */\n    render: function() {\n        this._destroyChildren();\n        this.$el.empty().html(HTML_BTNS);\n\n        this.componentHolder.setInstance('pagination', this._createComponent());\n        return this;\n    },\n\n    /**\n     * Event handler for 'appended' event\n     * @private\n     */\n    _onAppended: function() {\n        this.dimensionModel.set('paginationHeight', this.$el.outerHeight());\n    },\n\n    /**\n     * Create an option object for creating a tui.component.Pagination component.\n     * @returns {Object}\n     */\n    _createOptionObject: function() {\n        var customOptions = this.componentHolder.getOptions('pagination');\n        var btnOptions = {\n            $preOff: this.$el.find('.' + classNameConst.PAGINATION_PRE_OFF),\n            $pre_endOff: this.$el.find('.' + classNameConst.PAGINATION_PRE_END_OFF), // eslint-disable-line\n            $nextOff: this.$el.find('.' + classNameConst.PAGINATION_NEXT_OFF),\n            $lastOff: this.$el.find('.' + classNameConst.PAGINATION_NEXT_END_OFF)\n        };\n\n        if (customOptions === true) {\n            customOptions = {};\n        }\n\n        if (!customOptions.itemPerPage) {\n            customOptions.itemPerPage = this.dimensionModel.get('displayRowCount');\n        }\n\n        return _.assign({}, defaultOptions, btnOptions, customOptions);\n    },\n\n    /**\n     * Create new tui.component.Pagination instance\n     * @returns {tui.component.Pagination}\n     * @private\n     */\n    _createComponent: function() {\n        var ComponentClass = tui.util.pick(tui, 'component', 'Pagination');\n\n        if (!ComponentClass) {\n            throw new Error('Cannot find component \\'tui.component.Pagination\\'');\n        }\n        return new ComponentClass(this._createOptionObject(), this.$el);\n    }\n});\n\nmodule.exports = Pagination;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"