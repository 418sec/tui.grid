tui.util.defineNamespace("fedoc.content", {});
fedoc.content["painter_cell_number.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Painter class for the number cell\n * @author NHN Ent. FE Development Team\n */\n'use strict';\n\nvar NormalCell = require('./normal');\n\n/**\n * Number Cell 의 Painter\n * @module painter/cell/number\n * @extends module:painter/cell/normal\n */\nvar NumberCell = tui.util.defineClass(NormalCell, /**@lends module:painter/cell/number.prototype */{\n    /**\n     * @constructs\n     */\n    init: function() {\n        NormalCell.apply(this, arguments);\n    },\n\n    redrawAttributes: [],\n\n    /**\n     * 자기 자신의 인스턴스의 editType 을 반환한다.\n     * @returns {string} editType 'normal|button|select|button|text|text-password|text-convertible'\n     */\n    getEditType: function() {\n        return '_number';\n    },\n\n    /**\n     * Cell data 를 인자로 받아 &lt;td> 안에 들아갈 html string 을 반환한다.\n     * redrawAttributes 에 해당하는 프로퍼티가 변경되었을 때 수행될 로직을 구현한다.\n     * @param {object} cellData 모델의 셀 데이터\n     * @returns {string} html 마크업 문자열\n     * @example\n     * var html = this.getContentHtml();\n     * &lt;select>\n     *     &lt;option value='1'>option1&lt;/option>\n     *     &lt;option value='2'>option1&lt;/option>\n     *     &lt;option value='3'>option1&lt;/option>\n     * &lt;/select>\n     */\n    getContentHtml: function(cellData) {\n        return cellData.value;\n    }\n});\n\nmodule.exports = NumberCell;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"