tui.util.defineNamespace("fedoc.content", {});
fedoc.content["view_stateLayer.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Layer class that represents the state of rendering phase\n * @author NHN Ent. FE Development Team\n */\n'use strict';\n\nvar View = require('../base/view');\nvar renderStateMap = require('../common/constMap').renderState;\n\n/**\n * Layer class that represents the state of rendering phase.\n * @module view/stateLayer\n */\nvar StateLayer = View.extend(/**@lends module:view/stateLayer.prototype */{\n    /**\n     * @constructs\n     * @extends module:base/view\n     */\n    initialize: function(options) {\n        this.dimensionModel = options.dimensionModel;\n        this.renderModel = options.renderModel;\n\n        this.listenTo(this.dimensionModel, 'change', this._refreshLayout);\n        this.listenTo(this.renderModel, 'change:state', this.render);\n    },\n\n    className: 'state_layer',\n\n    template: _.template(\n        '&lt;div class=\"layer_content\">' +\n        '    &lt;%= text %>' +\n        '    &lt;% if (isLoading) { %>' +\n        '    &lt;div class=\"loading_img\">&lt;/div>' +\n        '    &lt;% } %>' +\n        '&lt;/div>'\n    ),\n\n    /**\n     * Render\n     * @return {object} This object\n     */\n    render: function() {\n        var renderState = this.renderModel.get('state');\n\n        if (renderState === renderStateMap.DONE) {\n            this.$el.hide();\n        } else {\n            this.$el.html(this.template({\n                text: this._getMessage(renderState),\n                isLoading: (renderState === renderStateMap.LOADING)\n            })).show();\n            this._refreshLayout();\n        }\n        return this;\n    },\n\n    /**\n     * Returns the message based on the renderState value\n     * @param  {string} renderState - Renderer.state value\n     * @return {string} - Message\n     */\n    _getMessage: function(renderState) {\n        switch (renderState) {\n            case renderStateMap.LOADING:\n                return '요청을 처리 중입니다.';\n            case renderStateMap.EMPTY:\n                return (this.renderModel.get('emptyMessage') || '데이터가 존재하지 않습니다.');\n            default:\n                return null;\n        }\n    },\n\n    /**\n     * Sets the marginTop and height value.\n     * @private\n     */\n    _refreshLayout: function() {\n        var dimensionModel = this.dimensionModel;\n\n        this.$el.css({\n            marginTop: dimensionModel.get('headerHeight'),\n            height: dimensionModel.get('bodyHeight') + dimensionModel.get('toolbarHeight')\n        });\n    }\n});\n\nmodule.exports = StateLayer;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"