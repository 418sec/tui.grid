tui.util.defineNamespace("fedoc.content", {});
fedoc.content["view_layout_frame.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Frame Base\n * @author NHN Ent. FE Development Team\n */\n'use strict';\n\nvar View = require('../../base/view');\n\n/**\n * Base class for frame view.\n * @module view/layout/frame\n * @extends module:base/view\n */\nvar Frame = View.extend(/**@lends module:view/layout/frame.prototype */{\n    /**\n     * @constructs\n     * @param {Object} options Options\n     *      @param {String} [options.whichSide='R'] 'R' for Right side, 'L' for Left side\n     */\n    initialize: function(options) {\n        View.prototype.initialize.call(this);\n\n        this.setOwnProperties({\n            viewFactory: options.viewFactory,\n            renderModel: options.renderModel,\n            dimensionModel: options.dimensionModel,\n            whichSide: options.whichSide || 'R'\n        });\n\n        this.listenTo(this.renderModel, 'columnModelChanged', this.render, this)\n            .listenTo(this.dimensionModel, 'columnWidthChanged', this._onColumnWidthChanged, this);\n    },\n\n    tagName: 'div',\n\n    className: 'lside_area',\n\n    /**\n     * Render\n     * @returns {module:view/layout/frame} This object\n     */\n    render: function() {\n        var factory = this.viewFactory;\n\n        this.$el.empty();\n        this._destroyChildren();\n\n        this.beforeRender();\n        this._addChildren([\n            factory.createHeader(this.whichSide),\n            factory.createBody(this.whichSide)\n        ]);\n        this.$el.append(this._renderChildren());\n        this.afterRender();\n\n        return this;\n    },\n\n    /**\n     * Event handler for 'columnWidthChanged' event on module:module/dimension\n     * @abstract\n     * @private\n     */\n    _onColumnWidthChanged: function() {},\n\n    /**\n     * To be called at the beginning of the 'render' method.\n     * @abstract\n     */\n    beforeRender: function() {},\n\n    /**\n     * To be called at the end of the 'render' method.\n     * @abstract\n     */\n    afterRender: function() {}\n});\n\nmodule.exports = Frame;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"